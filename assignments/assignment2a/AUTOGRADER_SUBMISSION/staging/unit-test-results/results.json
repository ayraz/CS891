{
  "serialVersionUID": 1,
  "type": "UNIT",
  "testClasses": [
    {
      "serialVersionUID": 1,
      "className": "Assignment_1B_BeingRunnableTest",
      "testType": "UNIT",
      "testRubric": {
        "value": "",
        "goal": "",
        "reference": [],
        "points": 1,
        "precision": 0,
        "weight": 1,
        "threshold": 0.0,
        "synthetic": false,
        "type": "CLASS"
      },
      "testMethods": [
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_BeingRunnableTest",
          "method": "testBeingRunGazingSimulationMethodErrorHandling",
          "status": "PASSED",
          "testRubric": {
            "value": "SimpleBeingRunnable acquirePalantirAndGaze method error test.",
            "goal": "This test checks the acquirePalantirAndGaze method for proper error handling when the method is unable to acquire a Palantir. It also checks that all the expected method calls are made with the correct parameters, the correct number of times,and in the correct order.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_BeingRunnableTest",
          "method": "testBeingAcquirePalantirAndGazeMethod",
          "status": "PASSED",
          "testRubric": {
            "value": "SimpleBeingRunnable acquirePalantirAndGaze method test.",
            "goal": "This test checks for the proper implementation of the SimpleBeingRunnable's acquirePalantirAndGaze method. It checks that all the expected method calls are made with the correct parameters, the correct number of times,and in the correct order.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        }
      ]
    },
    {
      "serialVersionUID": 1,
      "className": "Assignment_1B_RunnableThreadsMgrTest",
      "testType": "UNIT",
      "testRubric": {
        "value": "",
        "goal": "",
        "reference": [],
        "points": 1,
        "precision": 0,
        "weight": 1,
        "threshold": 0.0,
        "synthetic": false,
        "type": "CLASS"
      },
      "testMethods": [
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_RunnableThreadsMgrTest",
          "method": "testCreateAndStartWaiterForBeingThreadsMethod",
          "status": "PASSED",
          "testRubric": {
            "value": "RunnableThreadsMgr createAndStartWaiterForBeingThreads method test.",
            "goal": "This test checks for the proper implementation of the RunnableThreadsMgr's createAndStartWaiterForBeingThreads method. It checks that all the expected method calls are made with the correct parameters, the correct number of times,and in the correct order.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_RunnableThreadsMgrTest",
          "method": "runSimulationTest",
          "status": "PASSED",
          "testRubric": {
            "value": "RunnableThreadsMgr runSimulation method test.",
            "goal": "This test checks for the proper implementation of the RunnableThreadsMgr's runSimulation method. It checks that all the expected method calls are made with the correct parameters, the correct number of times,and in the correct order.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_RunnableThreadsMgrTest",
          "method": "beginBeingThreadsTest",
          "status": "PASSED",
          "testRubric": {
            "value": "RunnableThreadsMgr beingThreads method test.",
            "goal": "This test checks for the proper implementation of the RunnableThreadsMgr's beingThreads method. It checks that all the expected method calls are made with the correct parameters, the correct number of times,and in the correct order.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_RunnableThreadsMgrTest",
          "method": "makeBeingsTest",
          "status": "PASSED",
          "testRubric": {
            "value": "BeingManager makeBeings method test.",
            "goal": "The goal of this test is to ensure that when the BeingManager makeBeings method is invoked and repeatedly calls the RunnableThreadsMgr newBeing method, that the correct number of unique Being instances are created.5 new beings.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.beings.runnableThreads.Assignment_1B_RunnableThreadsMgrTest",
          "method": "newBeingTest",
          "status": "PASSED",
          "testRubric": {
            "value": "RunnableThreadsManager newBeing method test.",
            "goal": "The goal of this test is to ensure that the newBeing call creates a new being.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        }
      ]
    },
    {
      "serialVersionUID": 1,
      "className": "Assignment_1B_SpinLockTest",
      "testType": "UNIT",
      "testRubric": {
        "value": "",
        "goal": "",
        "reference": [],
        "points": 1,
        "precision": 0,
        "weight": 1,
        "threshold": 0.0,
        "synthetic": false,
        "type": "CLASS"
      },
      "testMethods": [
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockTest",
          "method": "tryLockTest",
          "status": "PASSED",
          "testRubric": {
            "value": "SpinLock tryLock method test.",
            "goal": "The goal of this test is to ensure that SpinLock's tryLock methodcalls the correct method the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockTest",
          "method": "unlockTest",
          "status": "PASSED",
          "testRubric": {
            "value": "SpinLock unlock method test.",
            "goal": "The goal of this test is to ensure that SpinLock's unlock methodcalls the correct method the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockTest",
          "method": "lockIsLockedTest",
          "status": "PASSED",
          "testRubric": {
            "value": "SpinLock lock method test (locked).",
            "goal": "The goal of this test is to ensure that SpinLock's lock method behaves correctly when the lock is locked. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockTest",
          "method": "lockIsUnlockedTest",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockTest",
          "method": "lockIsLockedAndThenCancelledTest",
          "status": "PASSED",
          "testRubric": {
            "value": "SpinLock lock method test (locked, cancelled).",
            "goal": "The goal of this test is to ensure that SpinLock's lock method behaves correctly when the lock is locked and a cancel is encountered. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        }
      ]
    },
    {
      "serialVersionUID": 1,
      "className": "Assignment_1B_ReentrantSpinLockTest",
      "testType": "UNIT",
      "testRubric": {
        "value": "",
        "goal": "",
        "reference": [],
        "points": 1,
        "precision": 0,
        "weight": 1,
        "threshold": 0.0,
        "synthetic": false,
        "type": "CLASS"
      },
      "testMethods": [
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testTryLock",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock tryLock method test.",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's tryLock methodcalls the correct method the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testLockWhenAlreadyLockedButIsReentrant",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock lock method test (locked but reentrant).",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's lock method behaves correctly when the lock is unlocked due to it being reentrant. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testLockWhenAlreadyLockedWithWaitTestAndThenCancelled",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock lock method test (locked, not reentrant, spin wait, cancelled).",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's lock method behaves correctly when the lock is locked and not reentrant and a cancel is received during the wait. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testLockWhenAlreadyLockedTest",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock lock method test (locked and not reentrant).",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's lock method behaves correctly when the lock is locked and not reentrant. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testLockWhenUnlocked",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock lock method test (unlocked).",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's lock method behaves correctly when the lock is unlocked. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testLockWhenAlreadyLockedWithWaitTest",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock lock method test (locked, not reentrant, spin wait).",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's lock method behaves correctly when the lock is locked and not reentrant and needs tobe checked more than once. It also ensures that the correct methods are called with the correct parameters the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_ReentrantSpinLockTest",
          "method": "testUnlock",
          "status": "PASSED",
          "testRubric": {
            "value": "ReentrantSpinLock unlock method test.",
            "goal": "The goal of this test is to ensure that ReentrantSpinLock's unlock methodcalls the correct method the correct number of times.",
            "reference": [
              "@@Unfinished"
            ],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        }
      ]
    },
    {
      "serialVersionUID": 1,
      "className": "Assignment_1B_SpinLockHashMapMgrTest",
      "testType": "UNIT",
      "testRubric": {
        "value": "",
        "goal": "",
        "reference": [],
        "points": 1,
        "precision": 0,
        "weight": 1,
        "threshold": 0.0,
        "synthetic": false,
        "type": "CLASS"
      },
      "testMethods": [
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testAcquireAllAvailablePalantiri",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testReleaseOneAcquiredPalantir",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testReleaseNullPalantir",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testAcquireWithOnlyOnePalantiriAvailable",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "buildModelGraduate",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testAcquireWithAllPalantiriAvailable",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "buildModelUndergraduate",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        },
        {
          "serialVersionUID": 1,
          "clazz": "edu.vandy.simulator.managers.palantiri.spinLockHashMap.Assignment_1B_SpinLockHashMapMgrTest",
          "method": "testReleaseAllAcquiredPalantiri",
          "status": "PASSED",
          "testRubric": {
            "value": "",
            "goal": "",
            "reference": [],
            "points": 1,
            "precision": 0,
            "weight": 1,
            "threshold": 0.0,
            "synthetic": false,
            "type": "METHOD"
          }
        }
      ]
    }
  ]
}